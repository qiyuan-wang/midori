// Generated by CoffeeScript 1.6.3
var decode, playlist, songs, tracks;

decode = function(source) {
  var _i, _j, _k, _l, _loc1, _loc2, _loc3, _loc4, _loc5, _loc6, _loc7, _loc8, _loc9, _m, _ref, _ref1, _ref2;
  _loc9 = Number(source.charAt(0));
  _loc7 = source.substring(1);
  _loc5 = Math.floor(_loc7.length / _loc9);
  _loc6 = _loc7.length % _loc9;
  _loc2 = new Array();
  for (_loc3 = _i = 0; _i < _loc6; _loc3 = _i += 1) {
    if (_loc2[_loc3] === void 0) {
      _loc2[_loc3] = "";
    }
    _loc2[_loc3] = _loc7.substr((_loc5 + 1) * _loc3, _loc5 + 1);
  }
  for (_loc3 = _j = _loc6; _j < _loc9; _loc3 = _j += 1) {
    _loc2[_loc3] = _loc7.substr(_loc5 * (_loc3 - _loc6) + (_loc5 + 1) * _loc6, _loc5);
  }
  _loc4 = "";
  for (_loc3 = _k = 0, _ref = _loc2[0].length; _k < _ref; _loc3 = _k += 1) {
    for (_loc1 = _l = 0, _ref1 = _loc2.length; _l < _ref1; _loc1 = _l += 1) {
      _loc4 = _loc4 + _loc2[_loc1].charAt(_loc3);
    }
  }
  _loc4 = unescape(_loc4);
  _loc8 = "";
  for (_loc3 = _m = 0, _ref2 = _loc4.length; _m < _ref2; _loc3 = _m += 1) {
    if (_loc4.charAt(_loc3) === "^") {
      _loc8 = _loc8 + "0";
      continue;
    }
    _loc8 = _loc8 + _loc4.charAt(_loc3);
  }
  return _loc8;
};

playlist = {};

tracks = $('track');

if (tracks.length !== 0) {
  songs = [];
  tracks.each(function() {
    var track, track_info;
    track = $(this);
    track_info = {
      title: track.find('title').text(),
      artist: track.find('artist').text(),
      album: track.find('album_name').text(),
      location: decode(track.find('location').text())
    };
    return songs.push(track_info);
  });
  playlist = {
    type: "track search",
    status: "ready",
    album_id: $('playlist').find('type_id').text(),
    songs: songs
  };
} else {
  playlist = {
    type: "track search",
    status: "not found"
  };
}

chrome.runtime.sendMessage(playlist);
